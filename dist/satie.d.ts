// Generated by dts-bundle v0.2.0
// Dependencies for this module:
//   ../node_modules/musicxml-interfaces/typescript/dist/musicxml-interfaces.d.ts

declare module 'satie' {
    import C = require("__satie/stores/contracts");
    export import MusicXML = require("musicxml-interfaces");
    export interface ISatieProps {
        musicXML: C.MusicXML.ScoreTimewise;
        width: number;
        height: number;
    }
    export var MusicXMLView: React.ComponentClass<ISatieProps>;
}

declare module '__satie/stores/contracts' {
    export import MusicXML = require("musicxml-interfaces");
    import Annotator = require("__satie/stores/annotator");
    import Model = require("__satie/stores/model");
    export import SMuFL = require("__satie/util/SMuFL");
    export import renderUtil = require("__satie/util/renderUtil");
    export import strHash = require("__satie/util/hash");
    export interface IApi {
        "PUT /webapp/bpm"?(action: IFluxAction<number>): void;
        "POST /webapp/midiOut"?(action: IFluxAction<any>): void;
        "PUT /webapp/visualCursor/togglePlay"?(action: IFluxAction<void>): void;
        "PUT /webapp/song/dirty"?(action: IFluxAction<void>): void;
        "DELETE /webapp/song/dirty"?(action: IFluxAction<void>): void;
        "PUT /webapp/song/forceUpdate"?(action: IFluxAction<void>): void;
        "PUT /webapp/song/lineDirty"?(action: IFluxAction<string>): void;
        "DELETE /webapp/song/lineDirty"?(action: IFluxAction<number>): void;
        "PUT /webapp/song/src"?(action: IFluxAction<string>): void;
    }
    export interface IAccidentals {
        [key: string]: number;
    }
    export interface IAnnotationResult {
        cursor: IVisualCursor;
        operations: number;
        resetY: boolean;
        skip: boolean;
        success: boolean;
    }
    export interface IAnnotationOpts {
        cursor?: IVisualCursor;
        cursorBar?: number;
        cursorBeat?: number;
        cursorStave?: number;
        pointerData?: IPointerData;
    }
    export enum BeamCount {
        Variable = -1,
        One = 1,
        Two = 2,
        Three = 3,
        Four = 4,
        Five = 5,
        Six = 6,
        Seven = 7,
        Eight = 8,
        Nine = 9,
    }
    export enum Clef {
        Treble = 0,
        Bass = 1,
        Alto = 2,
        Tenor = 3,
        Piano = 4,
        Choral = 5,
        TrebleDrums = 6,
    }
    export interface IDispatcher {
        register: (callback: (payload: any) => boolean) => void;
        unregister: (callback: (payload: any) => boolean) => void;
        GET: (url: string, p?: any, cb?: (response: any) => void, nested?: boolean) => Promise<void>;
        DELETE: (url: string, p?: any, cb?: (response: any) => void, nested?: boolean) => Promise<void>;
        PATCH: (url: string, p?: any, cb?: (response: any) => void, nested?: boolean) => Promise<void>;
        PUT: (url: string, p?: any, cb?: (response: any) => void, nested?: boolean) => Promise<void>;
        POST: (url: string, p?: any, cb?: (response: any) => void, nested?: boolean) => Promise<void>;
        _events: string;
    }
    export class DispatcherRedirect {
        constructor(verb: string, newUrl: string);
        newUrl: string;
        verb: string;
        postData: any;
    }
    export interface IDuration {
        count: number;
        dots: number;
        displayDots?: number;
        displayTuplet?: ITuplet;
        hasFlagOrBeam?: boolean;
        temporary?: boolean;
        tuplet: ITuplet;
    }
    export interface IDurationSpec {
        count: number;
        dots?: number;
        tuplet?: ITuplet;
    }
    export interface IError {
        type: string;
        redirectTo: string;
    }
    export interface IFluxAction<PostData> {
        description: string;
        resource?: string;
        query: string;
        postData: PostData;
        nested?: boolean;
    }
    export class ScoreHeader implements MusicXML.ScoreHeader {
        credits: MusicXML.Credit[];
        identification: MusicXML.Identification;
        defaults: MusicXML.Defaults;
        work: MusicXML.Work;
        movementTitle: string;
        movementNumber: string;
        partList: MusicXML.PartList;
        constructor(spec: MusicXML.ScoreHeader);
        composer: string;
        title: string;
    }
    export function generateUUID(): string;
    export class Print implements MusicXML.Print {
        measureNumbering: MusicXML.MeasureNumbering;
        partNameDisplay: MusicXML.PartNameDisplay;
        newSystem: boolean;
        newPage: boolean;
        blankPage: string;
        measureLayout: MusicXML.MeasureLayout;
        partAbbreviationDisplay: MusicXML.PartAbbreviationDisplay;
        pageLayout: MusicXML.PageLayout;
        systemLayout: MusicXML.SystemLayout;
        staffSpacing: number;
        staffLayouts: MusicXML.StaffLayout[];
        pageNumber: string;
        constructor(print: MusicXML.Print);
        pageMarginsFor(page: number): MusicXML.PageMargins;
    }
    export function getPrint(header: ScoreHeader): Print;
    export interface IInstrument {
        name: string;
        shortName: string;
        soundfont: string;
        clef: Clef;
        program: number;
        lilypond: string;
    }
    export class InvalidDurationError {
    }
    export enum IterationStatus {
        ExitEarly = 5,
        Success = 10,
        RetryCurrent = 20,
        RetryCurrentNoOptimizations = 30,
        RetryBeam = 40,
        LineRemoved = 50,
        RetryLine = 60,
        LineCreated = 70,
        RetryPreviousLine = 80,
        RetryFromEntry = 90,
    }
    export interface ILocation {
        bar: number;
        beat: number;
        endMarker?: boolean;
    }
    export class Location implements ILocation {
        bar: number;
        beat: number;
        endMarker: boolean;
        eq(b: ILocation): boolean;
        lt(b: ILocation): boolean;
        le(b: ILocation): boolean;
        ge(b: ILocation): boolean;
        gt(b: ILocation): boolean;
        constructor(opts: ILocation);
    }
    export var log2: number;
    export var MAX_NUM: number;
    export interface INotation {
        glyph: string;
        noDirection: boolean;
        key?: string;
        x: number;
        y: number;
        scale: number;
        style?: any;
    }
    export var noteNames: string[];
    export class MetreContext {
        attributes: MusicXML.Attributes;
        endMarker: boolean;
        ts: ISimpleTimeSignature;
        bar: number;
        beat: number;
        constructor(other?: MetreContext);
    }
    export interface IMidiEvent {
        type: MidiEventType;
        note: number;
        channel: number;
        velocity: number;
    }
    export enum MidiEventType {
        NoteOn = 0,
        NoteOff = 1,
    }
    export interface IMouse {
        x: number;
        y: number;
        selectionInfo?: string;
        page: number;
    }
    export interface IPart {
        id: string;
        voices: number[];
        staves: number;
    }
    export interface IVoice {
        body?: Model[];
        instrument?: IInstrument;
    }
    export interface IPitch extends MusicXML.Pitch {
        displayAlter?: number;
        isRest?: boolean;
        line?: number;
        temporary?: boolean;
    }
    export interface IPitchDuration extends IDuration {
        chord?: IPitch[];
        isRest?: boolean;
        tieds?: MusicXML.Tied[];
        accToDelete?: number;
        isWholebar?: boolean;
    }
    export interface IPlaybackStore {
        addChangeListener: (callback: Function) => void;
        addLoadingListener: (callback: Function) => void;
        removeChangeListener: (callback: Function) => void;
        removeLoadingListener: (callback: Function) => void;
        ensureLoaded: (soundfont: string, avoidEvent?: boolean) => boolean;
        destructor: () => void;
        bpm: number;
        playing: boolean;
        ready: boolean;
    }
    export enum PreviewMode {
        ExcludePreviews = 0,
        IncludePreviews = 1,
    }
    export interface IPointerAction {
        mouseData: IPointerData;
        fn: (obj: Model, ctx: Annotator.Context) => IterationStatus;
    }
    export interface IPointerData {
        partIdx: number;
        obj: Model;
        idx: number;
        visualIdx?: number;
        musicLine?: number;
        line?: number;
        ctxData?: IVisualCursor;
    }
    export enum RectifyXPolicy {
        Invalid = 0,
        Max = 1,
        Min = 2,
    }
    export interface IScoreStore {
        destructor: () => void;
        addListener: (event: number, listener: Function) => void;
        removeListener: (event: number, listener: Function) => void;
        dirty: boolean;
        finalCtx: Annotator.Context;
        getLineDirty: (idx: number, h: number) => void;
        midiOutHint: (out: number[]) => void;
        header: ScoreHeader;
        parts: IPart[];
        voices: IVoice[];
        src: string;
        visualCursor: IVisualCursor;
        dangerouslyMarkRenderDone: () => void;
        dangerouslyMarkRendererDirty: () => void;
        dangerouslyMarkRendererLineClean: (action: IFluxAction<string>) => void;
        dangerouslyMarkRendererLineDirty: (line: number) => void;
        dangerouslySetVisualCursor: (visualCursor: IVisualCursor) => void;
        dangerouslyTakeSnapshot: (ctx: Annotator.Context) => void;
        ensureSoundfontLoaded: (soundfont: string, avoidEvent?: boolean) => void;
    }
    export enum EventType {
        Change = 0,
        Annotate = 1,
        History = 2,
        ClearHistory = 3,
        MidiOut = 4,
        MidiIn = 5,
    }
    export enum Type {
        Print = 50,
        START_OF_ATTRIBUTES = 100,
        EndMarker = 110,
        NewPage = 120,
        NewLine = 130,
        Begin = 140,
        Attributes = 145,
        Clef = 150,
        KeySignature = 160,
        TimeSignature = 170,
        END_OF_ATTRIBUTES = 199,
        Barline = 300,
        START_OF_MODIFIERS = 400,
        Slur = 425,
        BeamGroup = 450,
        Wedge = 475,
        END_OF_MODIFIERS = 499,
        Duration = 600,
        Placeholder = 999,
        Unknown = 1111,
    }
    export interface ISimpleTimeSignature {
        beats: number;
        beatType: number;
        commonRepresentation?: boolean;
    }
    export interface IUser {
        userId: string;
        _id: string;
        identity: {
            id: string;
            displayName: string;
        };
        whitelisted: boolean;
    }
    export interface ITuplet {
        num: number;
        den: number;
    }
    export interface IVisualCursor extends ILocation {
        annotatedObj?: Model;
        annotatedLine?: number;
        annotatedPage?: number;
        annotatedStave?: number;
    }
    export module NoteUtil {
        function makeDuration(spec: IDurationSpec): IDuration;
        function pitchToMidiNumber(p: IPitch): any;
        var noteToVal: {
            [x: string]: number;
        };
        var valToNote: any;
        function midiNumberToPitch(n: number, ctx: Annotator.Context): IPitch;
        function positiveMod(base: number, mod: number): number;
        function getAccidentals(key: MusicXML.Key): IAccidentals;
        var flatCircle: string;
        var sharpCircle: string;
        var keyCircle: string[];
        var circleOffsetByMode: {
            [x: string]: number;
        };
        function isPitch(k: IPitch, name: string, acc?: number): boolean;
    }
    export var InvalidAccidental: number;
    export interface ISynthCallback {
        tmpRef: string;
        forExport: boolean;
        cb: string;
    }
    export module JSONx {
        function clone<T>(obj: T): T;
        function hash<T>(obj: T): number;
    }
    export function deepAssign<T>(a: T, b: T): T;
    export function tsToSimpleTS(ts: MusicXML.Time): ISimpleTimeSignature;
    export var defaultClefLines: {
        [x: string]: number;
    };
}

declare module '__satie/stores/annotator' {
    import BarlineModel = require("__satie/stores/barline");
    import C = require("__satie/stores/contracts");
    import Model = require("__satie/stores/model");
    export class Context implements C.MetreContext {
        constructor(voices: C.IVoice[], layout: ILayoutOpts, editor: C.IScoreStore, assertionPolicy: AssertionPolicy);
        annotate(from: C.ILocation, cursor: C.IVisualCursor, disableRecording: boolean, dispatcher: C.IDispatcher): C.IAnnotationResult;
        abort(exception: any): void;
        captureLine(): ILineSnapshot;
        captureSnapshot(): IPartialSnapshot;
        curr: Model;
        staveSpacing: number;
        page: number;
        next(condition?: (model: Model) => boolean, skip?: number, allowModifiers?: boolean): Model;
        nextIdx(cond?: (model: Model, idx?: number) => boolean, skip?: number, allowModifiers?: boolean): number;
        intersects(type: C.Type, idx?: number, after?: boolean, before?: boolean): Model[];
        beamFollows(idx?: number): {
            inBeam: boolean;
            tuplet: C.ITuplet;
        }[];
        removeFollowingBeam(idx?: number, past?: boolean): C.IterationStatus;
        prev(condition?: (m: Model) => boolean, offset?: number): Model;
        eraseCurrent(splicePolicy?: SplicePolicy): C.IterationStatus;
        eraseFuture(idx: number): C.IterationStatus;
        erasePast(idx: number): C.IterationStatus;
        insertFuture(obj: Model, index?: number): C.IterationStatus;
        insertPast(obj: Model, index?: number, merge?: boolean): C.IterationStatus;
        insertPastVertical(objs: Model[], index?: number): C.IterationStatus;
        splice(start: number, count: number, replaceWith?: Model[], splicePolicy?: SplicePolicy): void;
        removeAdjacentBeams(note?: C.IDuration): C.IterationStatus;
        removeRemainingBeamsInBar(): C.IterationStatus;
        static insertPlaceholders(parts: C.IVoice[]): void;
        findVertical(where?: (obj: Model) => boolean, idx?: number): Model[];
        midiOutHint(out: number[]): void;
        nextActualType: number;
        _barAfter(index: number): Model;
        ts: C.ISimpleTimeSignature;
        markEntireSongDirty(): void;
        body: Model[];
        invisibleForBars: number;
        idx: number;
        voice: C.IVoice;
        voiceIdx: number;
        part: C.IPart;
        idxInPart: number;
        startOfBeamBeat: number;
        beat: number;
        __globalBeat__: number;
        bar: number;
        endMarker: boolean;
        accidentalsByStaff: C.IAccidentals[];
        barlineX: number[];
        line: number;
        loc: C.ILocation;
        pageLines: number[];
        pageStarts: number[];
        smallest: number;
        minBottomPaddings: number[];
        minTopPaddings: number[];
        x: number;
        y: number;
        barKeys: string[];
        fontSize: number;
        maxX: number;
        maxY: number;
        score: C.IScoreStore;
        disableRecordings: boolean;
        _recordings: {
            [x: string]: BarlineModel;
        };
        record(model: BarlineModel): void;
        toJSON(): {};
        calcFontSize(): number;
        isBeam: boolean;
        nullEntry: boolean;
        _voices: C.IVoice[];
        _layout: ILayoutOpts;
        print: C.Print;
        _attributes: C.MusicXML.Attributes;
        attributes: C.MusicXML.Attributes;
        lines: ILineSnapshot[];
    }
    export enum SplicePolicy {
        MatchedOnly = 1,
        Additive = 2,
        Masked = 3,
        ShortenOtherVoices = 4,
        Subtractive = 5,
    }
    export enum AssertionPolicy {
        Strict = 0,
        NoAssertions = 1,
    }
    export interface ILayoutOpts {
        header: C.ScoreHeader;
        snapshot?: ICompleteSnapshot;
    }
    export interface ILineSnapshot {
        accidentalsByStaff: C.IAccidentals[];
        attributes: C.MusicXML.Attributes;
        bar: number;
        barKeys: string[];
        barlineX: number[];
        beat: number;
        invisibleForBars: number;
        line: number;
        pageLines: number[];
        pageStarts: number[];
        voiceIdx: number;
        x: number;
        y: number;
    }
    export interface IPartialSnapshot {
        fontSize: number;
        maxX: number;
        maxY: number;
        attributes: C.MusicXML.Attributes;
        prevLine: ILineSnapshot;
        partialLine: ILineSnapshot;
    }
    export interface ICompleteSnapshot extends IPartialSnapshot {
        lines: ILineSnapshot[];
    }
    export function recordMetreData(voices: C.IVoice[]): void;
}

declare module '__satie/stores/model' {
    import Annotator = require("__satie/stores/annotator");
    import C = require("__satie/stores/contracts");
    class Model {
        key: string;
        idx: number;
        x: number;
        y: number;
        w: number;
        soundOnly: boolean;
        spacing: number;
        ctxData: C.MetreContext;
        isModifier: boolean;
        staff: number;
        inBeam: boolean;
        placeholder: boolean;
        selected: boolean;
        annotated: boolean;
        proposed: boolean;
        endMarker: boolean;
        beam: C.IPitchDuration[];
        note: C.IPitchDuration;
        isNote: boolean;
        isRest: boolean;
        visible: boolean;
        xPolicy: C.RectifyXPolicy;
        type: C.Type;
        fields: string[];
        mxmlJsonOnlyFields: string[];
        extraWidth: number;
        isAttribute: boolean;
        revision: string;
        priority: C.Type;
        calcBeats(ctx: C.MetreContext): number;
        constructor(spec: any, annotated: boolean);
        modelDidLoad(body: Model[], idx: number): void;
        annotate(ctx: Annotator.Context): C.IterationStatus;
        annotateImpl(ctx: Annotator.Context): C.IterationStatus;
        recordMetreDataImpl(mctx: C.MetreContext): void;
        render(options?: any): React.ReactElement<any>;
        toJSON(): {};
        assign<T>(obj: T): void;
        protected _getFlag(f: number): boolean;
        protected _setFlag(f: number, v: boolean): void;
        static _sessionId: string;
        static _lastKey: number;
        static setView: (View: (opts: {
            key: number;
            spec: Model;
        }) => any) => void;
        static removeAnnotations: (voices: C.IVoice[]) => void;
        static fromJSON(json: Object, existingObjects?: {
            [x: string]: Model;
        }): Model;
        static fromJSON(json: string, existingObjects?: {
            [x: string]: Model;
        }): Model;
        static newKey(): string;
    }
    module Model {
        var constructorsByType: {
            [x: number]: (spec: any) => Model;
        };
        class SubAttributeModel extends Model {
            annotate(ctx: Annotator.Context): C.IterationStatus;
            retryStatus: C.IterationStatus;
        }
    }
    export = Model;
}

declare module '__satie/util/SMuFL' {
    export import bravuraMetadata = require("__satie/util/bravura_metadata");
    export var glyphClasses: any;
    export var glyphNames: any;
    export var bravuraBBoxes: {
        [x: string]: any[];
    };
    export function getGlyphCode(name: string): string;
    export var distances: {
        beam: number;
    };
}

declare module '__satie/util/renderUtil' {
    export var rastalToHeight: number[];
    export var pageSizes: {
        name: string;
        lilypondName: string;
        width: number;
        height: number;
        unit: string;
    }[];
    export function defaultPageSize(): {
        name: string;
        lilypondName: string;
        width: number;
        height: number;
        unit: string;
    };
    export var defaultIndent: number;
    export var defaultMargins: {
        top: number;
        right: number;
        bottom: number;
        left: number;
    };
    export var defaultStaveHeight: number;
    export var lilypondSizes: {
        "choral": {
            width: number;
            height: number;
            unit: string;
        };
        "marching": {
            width: number;
            height: number;
            unit: string;
        };
        "a10": {
            width: number;
            height: number;
            unit: string;
        };
        "a9": {
            width: number;
            height: number;
            unit: string;
        };
        "a8": {
            width: number;
            height: number;
            unit: string;
        };
        "a7": {
            width: number;
            height: number;
            unit: string;
        };
        "a6": {
            width: number;
            height: number;
            unit: string;
        };
        "a5": {
            width: number;
            height: number;
            unit: string;
        };
        "a4": {
            width: number;
            height: number;
            unit: string;
        };
        "a3": {
            width: number;
            height: number;
            unit: string;
        };
        "a2": {
            width: number;
            height: number;
            unit: string;
        };
        "a1": {
            width: number;
            height: number;
            unit: string;
        };
        "a0": {
            width: number;
            height: number;
            unit: string;
        };
        "b10": {
            width: number;
            height: number;
            unit: string;
        };
        "b9": {
            width: number;
            height: number;
            unit: string;
        };
        "b8": {
            width: number;
            height: number;
            unit: string;
        };
        "b7": {
            width: number;
            height: number;
            unit: string;
        };
        "b6": {
            width: number;
            height: number;
            unit: string;
        };
        "b5": {
            width: number;
            height: number;
            unit: string;
        };
        "b4": {
            width: number;
            height: number;
            unit: string;
        };
        "b3": {
            width: number;
            height: number;
            unit: string;
        };
        "b2": {
            width: number;
            height: number;
            unit: string;
        };
        "b1": {
            width: number;
            height: number;
            unit: string;
        };
        "b0": {
            width: number;
            height: number;
            unit: string;
        };
        "4a0": {
            width: number;
            height: number;
            unit: string;
        };
        "2a0": {
            width: number;
            height: number;
            unit: string;
        };
        "c10": {
            width: number;
            height: number;
            unit: string;
        };
        "c9": {
            width: number;
            height: number;
            unit: string;
        };
        "c8": {
            width: number;
            height: number;
            unit: string;
        };
        "c7": {
            width: number;
            height: number;
            unit: string;
        };
        "c6": {
            width: number;
            height: number;
            unit: string;
        };
        "c5": {
            width: number;
            height: number;
            unit: string;
        };
        "c4": {
            width: number;
            height: number;
            unit: string;
        };
        "c3": {
            width: number;
            height: number;
            unit: string;
        };
        "c2": {
            width: number;
            height: number;
            unit: string;
        };
        "c1": {
            width: number;
            height: number;
            unit: string;
        };
        "c0": {
            width: number;
            height: number;
            unit: string;
        };
        "junior-legal": {
            width: number;
            height: number;
            unit: string;
        };
        "legal": {
            width: number;
            height: number;
            unit: string;
        };
        "ledger": {
            width: number;
            height: number;
            unit: string;
        };
        "letter": {
            width: number;
            height: number;
            unit: string;
        };
        "tabloid": {
            width: number;
            height: number;
            unit: string;
        };
        "11x17": {
            width: number;
            height: number;
            unit: string;
        };
        "17x11": {
            width: number;
            height: number;
            unit: string;
        };
        "government-letter": {
            width: number;
            height: number;
            unit: string;
        };
        "government-legal": {
            width: number;
            height: number;
            unit: string;
        };
        "philippine-legal": {
            width: number;
            height: number;
            unit: string;
        };
        "ansi a": {
            width: number;
            height: number;
            unit: string;
        };
        "ansi b": {
            width: number;
            height: number;
            unit: string;
        };
        "ansi c": {
            width: number;
            height: number;
            unit: string;
        };
        "ansi d": {
            width: number;
            height: number;
            unit: string;
        };
        "ansi e": {
            width: number;
            height: number;
            unit: string;
        };
        "engineering f": {
            width: number;
            height: number;
            unit: string;
        };
        "arch a": {
            width: number;
            height: number;
            unit: string;
        };
        "arch b": {
            width: number;
            height: number;
            unit: string;
        };
        "arch c": {
            width: number;
            height: number;
            unit: string;
        };
        "arch d": {
            width: number;
            height: number;
            unit: string;
        };
        "arch e": {
            width: number;
            height: number;
            unit: string;
        };
        "arch e1": {
            width: number;
            height: number;
            unit: string;
        };
        "statement": {
            width: number;
            height: number;
            unit: string;
        };
        "half letter": {
            width: number;
            height: number;
            unit: string;
        };
        "quarto": {
            width: number;
            height: number;
            unit: string;
        };
        "octavo": {
            width: number;
            height: number;
            unit: string;
        };
        "executive": {
            width: number;
            height: number;
            unit: string;
        };
        "monarch": {
            width: number;
            height: number;
            unit: string;
        };
        "foolscap": {
            width: number;
            height: number;
            unit: string;
        };
        "folio": {
            width: number;
            height: number;
            unit: string;
        };
        "super-b": {
            width: number;
            height: number;
            unit: string;
        };
        "post": {
            width: number;
            height: number;
            unit: string;
        };
        "crown": {
            width: number;
            height: number;
            unit: string;
        };
        "large post": {
            width: number;
            height: number;
            unit: string;
        };
        "demy": {
            width: number;
            height: number;
            unit: string;
        };
        "medium": {
            width: number;
            height: number;
            unit: string;
        };
        "broadsheet": {
            width: number;
            height: number;
            unit: string;
        };
        "royal": {
            width: number;
            height: number;
            unit: string;
        };
        "elephant": {
            width: number;
            height: number;
            unit: string;
        };
        "double demy": {
            width: number;
            height: number;
            unit: string;
        };
        "quad demy": {
            width: number;
            height: number;
            unit: string;
        };
        "atlas": {
            width: number;
            height: number;
            unit: string;
        };
        "imperial": {
            width: number;
            height: number;
            unit: string;
        };
        "antiquarian": {
            width: number;
            height: number;
            unit: string;
        };
        "pa0": {
            width: number;
            height: number;
            unit: string;
        };
        "pa1": {
            width: number;
            height: number;
            unit: string;
        };
        "pa2": {
            width: number;
            height: number;
            unit: string;
        };
        "pa3": {
            width: number;
            height: number;
            unit: string;
        };
        "pa4": {
            width: number;
            height: number;
            unit: string;
        };
        "pa5": {
            width: number;
            height: number;
            unit: string;
        };
        "pa6": {
            width: number;
            height: number;
            unit: string;
        };
        "pa7": {
            width: number;
            height: number;
            unit: string;
        };
        "pa8": {
            width: number;
            height: number;
            unit: string;
        };
        "pa9": {
            width: number;
            height: number;
            unit: string;
        };
        "pa10": {
            width: number;
            height: number;
            unit: string;
        };
        "f4": {
            width: number;
            height: number;
            unit: string;
        };
        "a8landscape": {
            width: number;
            height: number;
            unit: string;
        };
    };
    export function mmToTenths(scaling40: number, mm: number): number;
    export function cssSizeToTenths(scaling40: number, css: string): number;
    export function tenthsToMM(scaling40: number, tenths: number): number;
    export var ptPerMM: number;
    export var mmPerIn: number;
    export function sigmoid(t: number): number;
    export var V_PADDING: number;
    export function getHeaderHeight(header: any): number;
    export var staveSeperation: number;
    export var useGL: boolean;
}

declare module '__satie/util/hash' {
    function hash(str: string): number;
    export = hash;
}

declare module '__satie/stores/barline' {
    import Model = require("__satie/stores/model");
    import Annotator = require("__satie/stores/annotator");
    import C = require("__satie/stores/contracts");
    class BarlineModel extends Model implements C.MusicXML.BarlineComplete {
        type: C.Type;
        xPolicy: C.RectifyXPolicy;
        fields: string[];
        annotatedAccidentalSpacing: number;
        height: number;
        newlineNext: boolean;
        selected: boolean;
        temporary: boolean;
        yOffset: number;
        segno: C.MusicXML.Segno;
        coda: C.MusicXML.Coda;
        location: C.MusicXML.BarlineLocation;
        codaAttrib: string;
        wavyLine: C.MusicXML.WavyLine;
        fermatas: C.MusicXML.Fermata[];
        segnoAttrib: string;
        divisions: string;
        barStyle: C.MusicXML.BarStyle;
        ending: C.MusicXML.Ending;
        repeat: C.MusicXML.Repeat;
        footnote: C.MusicXML.Footnote;
        level: C.MusicXML.Level;
        constructor(spec: {
            barStyle: {
                data: C.MusicXML.BarStyleType;
            };
        }, annotated: boolean);
        recordMetreDataImpl(mctx: C.MetreContext): void;
        annotateImpl(ctx: Annotator.Context): C.IterationStatus;
        static createBarline: (ctx: Annotator.Context, type?: C.MusicXML.BarStyleType) => C.IterationStatus;
    }
    export = BarlineModel;
}

declare module '__satie/util/bravura_metadata' {
    var Bravura: {
        "fontName": string;
        "fontVersion": number;
        "engravingDefaults": {
            "arrowShaftThickness": number;
            "barlineSeparation": number;
            "beamSpacing": number;
            "beamThickness": number;
            "bracketThickness": number;
            "dashedBarlineDashLength": number;
            "dashedBarlineGapLength": number;
            "dashedBarlineThickness": number;
            "hairpinThickness": number;
            "legerLineExtension": number;
            "legerLineThickness": number;
            "lyricLineThickness": number;
            "octaveLineThickness": number;
            "pedalLineThickness": number;
            "repeatBarlineDotSeparation": number;
            "repeatEndingLineThickness": number;
            "slurEndpointThickness": number;
            "slurMidpointThickness": number;
            "staffLineThickness": number;
            "stemThickness": number;
            "subBracketThickness": number;
            "textEnclosureThickness": number;
            "thickBarlineThickness": number;
            "thinBarlineThickness": number;
            "tieEndpointThickness": number;
            "tieMidpointThickness": number;
            "tupletBracketThickness": number;
        };
        "glyphBBoxes": {}[][];
        "glyphsWithAlternates": {
            "4stringTabClef": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "6stringTabClef": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "accdnPush": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "accidentalDoubleFlat": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "accidentalFlat": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "accidentalNatural": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "accidentalSharp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "accidentalTripleFlat": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articAccentAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articAccentBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articAccentStaccatoAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articAccentStaccatoBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articMarcatoAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articMarcatoBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articMarcatoStaccatoAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articMarcatoStaccatoBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articStaccatissimoAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articStaccatissimoBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articStaccatissimoStrokeAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articStaccatissimoStrokeBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articStaccatissimoWedgeAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articStaccatissimoWedgeBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articStaccatoAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articStaccatoBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articTenutoAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articTenutoAccentAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articTenutoAccentBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articTenutoBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articTenutoStaccatoAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "articTenutoStaccatoBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "brace": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "cClef": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "caesura": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "chantCclef": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "chantFclef": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "coda": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "doubleTongueAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "doubleTongueBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "dynamicForte": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "dynamicMezzo": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "dynamicNiente": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "dynamicPiano": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "dynamicRinforzando": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "dynamicSforzando": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "dynamicZ": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "fClef": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag1024thDown": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag1024thUp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag128thDown": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag128thUp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag16thDown": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag16thUp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag256thDown": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag256thUp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag32ndDown": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag32ndUp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag512thDown": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag512thUp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag64thDown": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag64thUp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag8thDown": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "flag8thUp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "gClef": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "gClef8vb": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "harpMetalRod": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "harpTuningKey": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "keyboardPedalPed": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "keyboardPedalSost": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "luteFingeringRHThird": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "luteFrench10thCourse": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "luteFrench7thCourse": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "luteFrench8thCourse": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "luteFrench9thCourse": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "luteFrenchFretC": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "medRenFlatSoftB": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "mensuralCclef": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "mensuralProportion4": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "noteDoubleWhole": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "noteheadBlack": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "noteheadDoubleWhole": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "noteheadHalf": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "noteheadWhole": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictBassDrum": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictBongos": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictCastanets": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictConga": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictCowBell": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictFlexatone": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictGlsp": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictGuiro": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictLithophone": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictLotusFlute": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictMar": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictMaraca": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictMusicalSaw": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictSleighBell": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictTambourine": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictTimbales": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictTimpani": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictTomTom": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictTomTomChinese": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictTubaphone": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictVib": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictVibMotorOff": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictXyl": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictXylBass": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pictXylTenor": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pluckedSnapPizzicatoAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "pluckedSnapPizzicatoBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "repeatRightLeft": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "segno": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "stringsChangeBowDirection": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig0": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig1": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig2": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig3": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig4": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig5": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig6": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig7": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig8": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "timeSig9": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "tripleTongueAbove": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "tripleTongueBelow": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
            "unpitchedPercussionClef1": {
                "alternates": {
                    "codepoint": string;
                    "name": string;
                }[];
            };
        };
        "glyphsWithAnchors": {
            "flag1024thDown": {
                "stemDownSW": number[];
            };
            "flag1024thUp": {
                "stemUpNW": number[];
            };
            "flag1024thUpShort": {
                "stemUpNW": number[];
            };
            "flag128thDown": {
                "stemDownSW": number[];
            };
            "flag128thDownStraight": {
                "stemDownSW": number[];
            };
            "flag128thUp": {
                "stemUpNW": number[];
            };
            "flag128thUpShort": {
                "stemUpNW": number[];
            };
            "flag128thUpStraight": {
                "stemUpNW": number[];
            };
            "flag16thDown": {
                "stemDownSW": number[];
            };
            "flag16thUp": {
                "stemUpNW": number[];
            };
            "flag256thDown": {
                "stemDownSW": number[];
            };
            "flag256thDownStraight": {
                "stemDownSW": number[];
            };
            "flag256thUp": {
                "stemUpNW": number[];
            };
            "flag256thUpShort": {
                "stemUpNW": number[];
            };
            "flag256thUpStraight": {
                "stemUpNW": number[];
            };
            "flag32ndDown": {
                "stemDownSW": number[];
            };
            "flag32ndDownStraight": {
                "stemDownSW": number[];
            };
            "flag32ndUp": {
                "stemUpNW": number[];
            };
            "flag32ndUpShort": {
                "stemUpNW": number[];
            };
            "flag32ndUpStraight": {
                "stemUpNW": number[];
            };
            "flag512thDown": {
                "stemDownSW": number[];
            };
            "flag512thDownStraight": {
                "stemDownSW": number[];
            };
            "flag512thUp": {
                "stemUpNW": number[];
            };
            "flag512thUpShort": {
                "stemUpNW": number[];
            };
            "flag512thUpStraight": {
                "stemUpNW": number[];
            };
            "flag64thDown": {
                "stemDownSW": number[];
            };
            "flag64thDownStraight": {
                "stemDownSW": number[];
            };
            "flag64thUp": {
                "stemUpNW": number[];
            };
            "flag64thUpShort": {
                "stemUpNW": number[];
            };
            "flag64thUpStraight": {
                "stemUpNW": number[];
            };
            "flag8thDown": {
                "stemDownSW": number[];
            };
            "flag8thUp": {
                "stemUpNW": number[];
            };
            "gClefLigatedNumberAbove": {
                "numeralBottom": number[];
            };
            "gClefLigatedNumberBelow": {
                "numeralBottom": number[];
            };
            "noteABlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteAFlatBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteAFlatHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteAHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteASharpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteASharpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteBBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteBFlatBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteBFlatHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteBHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteBSharpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteBSharpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteCBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteCFlatBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteCFlatHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteCHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteCSharpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteCSharpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteDBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteDFlatBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteDFlatHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteDHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteDSharpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteDSharpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteDoBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteDoHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteEBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteEFlatBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteEFlatHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteEHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteESharpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteESharpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteEmptyBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteEmptyHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteFBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteFFlatBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteFFlatHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteFHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteFSharpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteFSharpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteFaBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteFaHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteGBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteGFlatBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteGFlatHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteGHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteGSharpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteGSharpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteHBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteHHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteHSharpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteHSharpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteLaBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteLaHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteMiBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteMiHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteReBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteReHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeDiamondBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeDiamondWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeMoonBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeMoonWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeRoundBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeRoundWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeSquareBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeSquareWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeTriangleLeftBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeTriangleLeftWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeTriangleRightBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeTriangleRightWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeTriangleRoundBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeTriangleRoundWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeTriangleUpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteShapeTriangleUpWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteSiBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteSiHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteSoBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteSoHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteTiBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteTiHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadCircleSlash": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadCircleX": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadCircleXHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadCircledBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadCircledHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadClusterHalf2nd": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadClusterHalf3rd": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadClusterHalfBottom": {
                "stemDownNW": number[];
            };
            "noteheadClusterHalfTop": {
                "stemUpSE": number[];
            };
            "noteheadClusterQuarter2nd": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadClusterQuarter3rd": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadClusterQuarterBottom": {
                "stemDownNW": number[];
            };
            "noteheadClusterQuarterTop": {
                "stemUpSE": number[];
            };
            "noteheadClusterRoundBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadClusterRoundWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadClusterSquareBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadClusterSquareWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondBlackOld": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondBlackWide": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondClusterBlack2nd": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondClusterBlack3rd": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondClusterBlackBottom": {
                "stemDownNW": number[];
            };
            "noteheadDiamondClusterBlackTop": {
                "stemUpSE": number[];
            };
            "noteheadDiamondClusterWhite2nd": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondClusterWhite3rd": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondClusterWhiteBottom": {
                "stemDownNW": number[];
            };
            "noteheadDiamondClusterWhiteTop": {
                "stemUpSE": number[];
            };
            "noteheadDiamondHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondHalfFilled": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondHalfOld": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondHalfWide": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondOpen": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadDiamondWhiteWide": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadHalfWithX": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadHeavyX": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadHeavyXHat": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadLargeArrowDownBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadLargeArrowDownHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadLargeArrowUpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadLargeArrowUpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadMoonBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadMoonWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadPlusBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadPlusHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadRoundBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadRoundBlackLarge": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadRoundBlackSlashed": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadRoundBlackSlashedLarge": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadRoundWhite": {
                "stemDownNW": number[];
                "stemup": number[];
            };
            "noteheadRoundWhiteLarge": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadRoundWhiteSlashed": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadRoundWhiteSlashedLarge": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadRoundWhiteWithDot": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadRoundWhiteWithDotLarge": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashDiamondWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashHorizontalEnds": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashHorizontalEndsMuted": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashVerticalEnds": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashVerticalEndsMuted": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashVerticalEndsSmall": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashWhiteHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashWhiteMuted": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashX": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashedBlack1": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashedBlack2": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashedHalf1": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSlashedHalf2": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSquareBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSquareBlackLarge": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSquareBlackWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadSquareWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleDownBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleDownHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleDownWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleLeftBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleLeftWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleRightBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleRightWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleRoundDownBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleRoundDownWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleUpBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleUpHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleUpRightBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleUpRightWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadTriangleUpWhite": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadVoidWithX": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadXBlack": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadXHalf": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
            "noteheadXOrnate": {
                "stemDownNW": number[];
                "stemUpSE": number[];
            };
        };
        "ligatures": {
            "accidentalDoubleFlatParens": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "accidentalDoubleSharpParens": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "accidentalFlatParens": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "accidentalNaturalParens": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "accidentalSharpParens": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "fClef5Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef0Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef10Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef11Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef12Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef13Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef14Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef15Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef16Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef17Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef2Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef2Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef3Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef3Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef4Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef4Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef5Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef5Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef6Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef6Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef7Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef7Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef8Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef8Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef9Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClef9Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat10Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat11Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat13Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat14Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat15Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat16Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat1Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat2Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat2Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat3Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat3Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat4Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat5Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat6Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat6Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat7Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat7Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat8Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat9Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefFlat9Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNat2Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural10Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural13Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural17Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural2Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural3Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural3Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural6Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural6Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural7Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural9Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefNatural9Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefSharp12Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefSharp1Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefSharp4Above": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "gClefSharp5Below": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralFusaBlackStemDown": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralFusaBlackStemUp": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralFusaBlackVoidStemDown": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralFusaBlackVoidStemUp": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralFusaVoidStemDown": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralFusaVoidStemUp": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaBlackStemDownLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaBlackStemDownRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaBlackStemUpLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaBlackStemUpRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaBlackVoidStemDownLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaBlackVoidStemDownRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaBlackVoidStemUpLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaBlackVoidStemUpRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaVoidStemDownLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaVoidStemDownRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaVoidStemUpLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralLongaVoidStemUpRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaBlackStemDownLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaBlackStemDownRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaBlackStemUpLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaBlackStemUpRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaBlackVoidStemDownLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaBlackVoidStemDownRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaBlackVoidStemUpLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaBlackVoidStemUpRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaVoidStemDownLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaVoidStemDownRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaVoidStemUpLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMaximaVoidStemUpRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemDown": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemDownExtendedFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemDownFlagLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemDownFlagRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemDownFlaredFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemUp": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemUpExtendedFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemUpFlagLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemUpFlagRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackStemUpFlaredFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemDown": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemDownExtendedFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemDownFlagLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemDownFlagRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemDownFlaredFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemUp": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemUpExtendedFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemUpFlagLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemUpFlagRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaBlackVoidStemUpFlaredFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemDown": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemDownExtendedFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemDownFlagLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemDownFlagRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemDownFlaredFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemUp": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemUpExtendedFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemUpFlagLeft": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemUpFlagRight": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralMinimaVoidStemUpFlaredFlag": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralSemiminimaBlackStemDown": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralSemiminimaBlackStemUp": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralSemiminimaBlackVoidStemDown": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralSemiminimaBlackVoidStemUp": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralSemiminimaVoidStemDown": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "mensuralSemiminimaVoidStemUp": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "noteheadBlackParens": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "noteheadDoubleWholeParens": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "noteheadHalfParens": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "noteheadWholeParens": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTrillFlatAbove": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTrillNaturalAbove": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTrillSharpAbove": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTurnFlatAbove": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTurnFlatAboveSharpBelow": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTurnFlatBelow": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTurnNaturalAbove": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTurnNaturalBelow": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTurnSharpAbove": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTurnSharpAboveFlatBelow": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "ornamentTurnSharpBelow": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig0Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig0Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig1Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig1Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig2Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig2Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig3Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig3Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig4Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig4Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig5Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig5Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig6Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig6Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig7Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig7Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig8Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig8Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig9Denominator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
            "timeSig9Numerator": {
                "codepoint": string;
                "componentGlyphs": string[];
            };
        };
        "sets": {
            "ss01": {
                "glyphs": {
                    "codepoint": string;
                    "name": string;
                }[];
                "type": string;
            };
            "ss02": {
                "glyphs": {
                    "codepoint": string;
                    "name": string;
                }[];
                "type": string;
            };
            "ss03": {
                "glyphs": {
                    "codepoint": string;
                    "name": string;
                }[];
                "type": string;
            };
        };
    };
    export = Bravura;
}

