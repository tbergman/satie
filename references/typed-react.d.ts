// Generated by dts-bundle v0.2.0

declare module 'typed-react' {
    export import Component = require("__typed-react/component");
    export import createClass = require("__typed-react/create_class");
    export import NotImplementedError = require("__typed-react/not_implemented_error");
}

declare module '__typed-react/component' {
    class Component<P, S> implements React.Specification<P, S>, React.Component<P, S> {
        refs: {
            [x: string]: React.DomReferencer;
        };
        props: P;
        state: S;
        getDOMNode(): Element;
        setState(nextState: S, callback?: () => void): void;
        replaceState(nextState: S, callback?: () => void): void;
        forceUpdate(callback?: () => void): void;
        isMounted(): boolean;
        setProps(nextProps: P, callback?: () => void): void;
        replaceProps(nextProps: P, callback?: () => void): void;
        render(): React.ReactElement<any, any>;
    }
    export = Component;
}

declare module '__typed-react/create_class' {
    import ClassCreator = require("__typed-react/class_creator");
    import ComponentClass = require("__typed-react/component_class");
    function createClass<P, S>(createClass: ClassCreator<P, S>, clazz: ComponentClass<P, S>): React.ReactComponentFactory<P>;
    export = createClass;
}

declare module '__typed-react/not_implemented_error' {
    class NotImplementedError implements Error {
        name: string;
        message: string;
        constructor(methodName: string);
    }
    export = NotImplementedError;
}

declare module '__typed-react/class_creator' {
    interface ClassCreator<P, S> {
        (specification: React.Specification<P, S>): React.ReactComponentFactory<P>;
    }
    export = ClassCreator;
}

declare module '__typed-react/component_class' {
    import Component = require("__typed-react/component");
    interface ComponentClass<P, S> {
        new (): Component<P, S>;
    }
    export = ComponentClass;
}

