// Generated by dts-bundle v0.2.0
// Dependencies for this module:
//   ../typings/react/react.d.ts

declare module 'typed-react' {
    import React = require("react");
    export class NotImplementedError implements Error {
        name: string;
        message: string;
        constructor(methodName: string);
    }
    export class Mixin<P, S> implements React.Mixin<P, S> {
        refs: {
            [x: string]: React.DomReferencer;
        };
        props: P;
        state: S;
        getDOMNode(): Element;
        setState(nextState: S, callback?: () => void): void;
        replaceState(nextState: S, callback?: () => void): void;
        forceUpdate(callback?: () => void): void;
        isMounted(): boolean;
        setProps(nextProps: P, callback?: () => void): void;
        replaceProps(nextProps: P, callback?: () => void): void;
    }
    export class Component<P, S> extends Mixin<P, S> implements React.Specification<P, S>, React.Component<P, S> {
        render(): React.ReactElement<any, any>;
    }
    export function createMixin<P, S>(clazz: new () => Mixin<P, S>): React.Mixin<P, S>;
    export function createClass<P, S>(clazz: new () => Component<P, S>, mixins?: React.Mixin<P, S>[]): React.ReactComponentFactory<P>;
}

